#!/bin/bash
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$(cd -P "$(dirname "$SOURCE")" >/dev/null 2>&1 && pwd)"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
DOT_ROOT="$(cd -P "$(dirname "$SOURCE")" >/dev/null 2>&1 && pwd)"

if [ -z ${XDG_DATA_HOME} ]; then
  _echo "Required environment variables unset -- re-login to load pam env"
  exit 1
fi

cd "$HOME" || exit

_echo() {
  echo "-- $@"
}

checkcmd() {
  local arr=("$@")
  for cmd in "${arr[@]}"; do
    echo "-- Checking for command $cmd..."
    command -v "$cmd" >/dev/null 2>&1 || return 1
  done
}

exit1() {
  _echo "Exiting..."
  exit 1
}

cd "$DOT_ROOT" || exit

_echo "Initializing submodules..."
git submodule update --recursive --init

_echo "Linking base packages..."
make base

cd "$HOME" || exit

# Make file directories
_echo "Creating file directories..."
files_dirs=(documents downloads games images lfs music programming share tmp)
mkdir -p "$HOME/files"
for dir in "${file_dirs[@]}"; do
  mkdir "$HOME/files/$dir"
done

# Create some necessary directories
function create_dir() {
  _echo "Creating directory $1..."
  mkdir -p $1
}

create_dir "$XDG_CACHE_HOME/less"
create_dir "$XDG_DATA_HOME/beets"
create_dir "$XDG_DATA_HOME/mpd"
create_dir "$XDG_DATA_HOME/wine/pfx/default"
create_dir "$XDG_LOG_HOME/X11"

# Bootstrap neovim
_echo "Bootstrapping neovim..."
nvim_bootstrap="$XDG_CONFIG_HOME/nvim/scripts/bootstrap"
if [ -f "$nvim_bootstrap" ]; then
  $nvim_bootstrap
fi

if [ -n "$BOOTSTRAP_STEAM_SKIN" ]; then
  # Bootstrap steam skins
  steam_skins_dir="$XDG_DATA_HOME/Steam/skins"
  steam_skins_metro_dir="$steam_skins_dir/metro-for-steam-4.4"
  if [ ! -d "$steam_skins_metro_dir" ]; then
    _echo "Bootstrapping Steam..."
    steam_skins_metro_zip="$steam_skins_dir/metro-for-steam-4.4.zip"

    create_dir "$steam_skins_dir"
    _echo "Downloading metro-for-steam..."
    wget -O "$steam_skins_metro_zip" "https://github.com/minischetti/metro-for-steam/archive/v4.4.zip"
    _echo "Decompressing metro-for-steam"
    unzip -o "$steam_skins_metro_zip" -d "$steam_skins_dir"
    rm "$steam_skins_metro_zip"

    steam_skins_metro_patch="$XDG_DATA_HOME/Steam/skins/metro-for-steam-4.4-patch"
    _echo "Downloading patch for metro-for-steam..."
    git clone "https://github.com/redsigma/UPMetroSkin.git" "$steam_skins_metro_patch"
    _echo "Patching metro-for-steam..."
    cp -r "$steam_skins_metro_patch/Unofficial 4.x Patch/Main Files [Install First]"/* "$steam_skins_metro_dir/"
    rm -rf "$steam_skins_metro_patch"
  fi
fi
